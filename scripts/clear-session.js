#!/usr/bin/env node

/**
 * Script para limpiar la sesi√≥n local de Supabase
 * √ötil cuando se elimina un usuario de la base de datos pero la app sigue funcionando
 */
require('dotenv').config();

const { createClient } = require('@supabase/supabase-js');

// Configuraci√≥n de Supabase (debe coincidir con src/config/supabase.ts)
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Error: Variables de entorno SUPABASE_URL y SUPABASE_ANON_KEY no configuradas');
  console.error('üîß Aseg√∫rate de crear el archivo .env con las variables necesarias');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: false
  }
});

async function clearSession() {
  try {
    console.log('üîÑ Limpiando sesi√≥n local de Supabase...');
    
    // Obtener usuario actual
    const { data: { user }, error: getUserError } = await supabase.auth.getUser();
    
    if (getUserError) {
      console.log('‚ùå Error obteniendo usuario:', getUserError.message);
    } else if (user) {
      console.log('üë§ Usuario actual:', user.email);
    } else {
      console.log('‚ÑπÔ∏è No hay usuario autenticado');
    }
    
    // Cerrar sesi√≥n
    const { error: signOutError } = await supabase.auth.signOut();
    
    if (signOutError) {
      console.log('‚ùå Error cerrando sesi√≥n:', signOutError.message);
    } else {
      console.log('‚úÖ Sesi√≥n cerrada exitosamente');
    }
    
    // Verificar que se cerr√≥ la sesi√≥n
    const { data: { user: userAfterSignOut }, error: verifyError } = await supabase.auth.getUser();
    
    if (verifyError) {
      console.log('‚ùå Error verificando sesi√≥n:', verifyError.message);
    } else if (userAfterSignOut) {
      console.log('‚ö†Ô∏è La sesi√≥n a√∫n est√° activa');
    } else {
      console.log('‚úÖ Sesi√≥n limpiada completamente');
    }
    
  } catch (error) {
    console.error('‚ùå Error inesperado:', error.message);
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  clearSession();
}

module.exports = { clearSession }; 